@model TICRM.DTOs.DeviceViewModel

@{
    ViewBag.Title = "Create Devices";
}

<!-- BEGIN: Subheader -->
<div class="m-subheader ">
    <div class="d-flex align-items-center">
        <div class="mr-auto">
            <h3 class="m-subheader__title m-subheader__title--separator">Devices</h3>
            <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                <li class="m-nav__item m-nav__item--home">
                    <a href="@Url.Action(" Index","Dashboard")" class="m-nav__link m-nav__link--icon">
                        <i class="m-nav__link-icon la la-home"></i>
                    </a>
                </li>
                <li class="m-nav__separator">-</li>
                <li class="m-nav__item">
                    <a href="@Url.Action(" Index","Devices")" class="m-nav__link">
                        <span class="m-nav__link-text">Devices</span>
                    </a>
                </li>
                <li class="m-nav__separator">-</li>
                <li class="m-nav__item">
                    <a href="@Url.Action(" Create","Devices")" class="m-nav__link">
                        <span class="m-nav__link-text">@ViewBag.Title</span>
                    </a>
                </li>
            </ul>
        </div>

    </div>
</div>

<!-- END: Subheader -->
<div class="m-content">
    <div class="row">
        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <!--begin::Form-->
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "DevicesCreateForm", @class = "m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="m-portlet__body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group m-form__group row">

                            <div class="col-lg-6 col-sm-12 col-md-12 col-xs-12">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, "Name (Please Select Valid Name it cannot be changed in future)", htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Mac, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Mac, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mac, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EMEINumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EMEINumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EMEINumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.StatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.StatusId, Model.StatusDropdown, "-- Select --", htmlAttributes: new { @class = "form-control", @id = "status" })
                                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                            <div class="col-lg-6 col-sm-12 col-md-12 col-xs-12">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AccountId, "AccountId", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10" id="AccountSelect">
                                        @Html.DropDownListFor(model => model.AccountId, Model.AccountsDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                                    </div>

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CustomerAssetId, "CustomerAssetId", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.CustomerAssetId, Model.CustomerAssetDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CustomerAssetId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AssignedUser, "Assigned User", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.AssignedUser, Model.AssignedUserDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.AssignedUser, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AssignedTeam, "Assigned Team", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.AssignedTeam, Model.AssignedTeamDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.AssignedTeam, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Maintenance, "Maintenance", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Maintenance, Model.MaintenanceDropdown, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Maintenance, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CloudServices, "CloudServices", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.CloudServices, Model.CloudServicesDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CloudServices, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsGateway, "Is Node Device", htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.CheckBoxFor(model => model.IsGateway, new { htmlAttributes = new { @class = "form-control m-checkbox m-checkbox--state-success",
                                   @type = "Checkbox" } })

                                </div>

                                <div class="form-group">
                                    <div id="gateway" style="display:none" class="col-md-10">
                                        <label class="control-label" for="gatewayD">
                                            Gateway Referance
                                        </label>
                                        @Html.DropDownListFor(model => model.GatewayReference, Model.GatewayReferenceDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })

                                    </div>
                                </div>

                            </div>

                        </div>

                        <!-- begin::ModalForIBM -->
                        <div class="modal fade" id="m_modal_IBM" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" style="display: none;" aria-hidden="true">
                            <div class="modal-dialog modal-lg" role="document">
                                <div class="modal-content">


                                    <div class="m-portlet m-portlet--tabs">
                                        <div class="m-portlet__head">
                                            <div class="m-portlet__head-tools">
                                                <ul class="nav nav-tabs m-tabs-line m-tabs-line--success m-tabs-line--2x" role="tablist">
                                                    <li class="nav-item m-tabs__item">
                                                        <a class="nav-link m-tabs__link active show" data-toggle="tab" href="#m_portlet_tab_IBMCloud" role="tab" aria-selected="true">
                                                            <i class="la la-user-md"></i> IBM CLoud
                                                        </a>
                                                    </li>

                                                </ul>
                                            </div>
                                        </div>
                                        <div class="m-portlet__body">
                                            <div class="tab-content">
                                                <div class="tab-pane active show" id="m_portlet_tab_IBMCloud" role="tabpanel">

                                                    <div class="form-group m--margin-top-10">
                                                        @Html.LabelFor(model => model.IBMCloud.OrganizationId, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.IBMCloud.OrganizationId, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.IBMCloud.OrganizationId, "", new { @class = "text-danger" })
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.IBMCloud.AppId, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.IBMCloud.AppId, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.IBMCloud.AppId, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.IBMCloud.APIKey, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.IBMCloud.APIKey, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.IBMCloud.APIKey, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.IBMCloud.AuthToken, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.IBMCloud.AuthToken, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.IBMCloud.AuthToken, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.IBMCloud.DeviceType, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.IBMCloud.DeviceType, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.IBMCloud.DeviceType, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.IBMCloud.DeviceId, "DeviceId (must be same as Device Name and it can not changed in future)", htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.IBMCloud.DeviceId, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.IBMCloud.DeviceId, "", new { @class = "text-danger" })
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.IBMCloud.DeviceTokken, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.IBMCloud.DeviceTokken, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.IBMCloud.DeviceTokken, "", new { @class = "text-danger" })
                                                    </div>

                                                    <input type="hidden" id="loc" name="loc">

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- end::ModalForIBM -->

                    </div>

                    <div class="m-portlet__foot m-portlet__no-border m-portlet__foot--fit">
                        <div class="m-form__actions m-form__actions--solid">
                            <div class="row">
                                <div class="col-lg-6">
                                    <button type="button" id="savebtn" class="btn btn-success"><i class="la la-save"></i> Submit</button>
                                    <button type="reset" class="btn btn-secondary"><i class="la la-refresh"></i> Cancel</button>
                                    <button type="button" onclick="Get_CloudService()" class="btn btn-secondary"><i class="la la-medium"></i> Open Cloud Service</button>
                                </div>
                                <div class="col-lg-6 m--align-right">
                                    <a href="/Devices/Index" class="btn btn-secondary m-btn m-btn--icon m-btn--wide m-btn--md m--margin-right-10">
                                        <span>
                                            <i class="la la-arrow-left"></i>
                                            <span>Back to List</span>
                                        </span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                }
                <!--end::Form-->
            </div>
            <!--end::Portlet-->
        </div>
    </div>
</div>
@Styles.Render("~/bundles/DevicesCSS")

@Scripts.Render("~/bundles/DevicesScript")