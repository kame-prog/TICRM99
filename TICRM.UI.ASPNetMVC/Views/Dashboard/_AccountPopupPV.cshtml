@model TICRM.DTOs.AccountDto
@using (Ajax.BeginForm("AccountModalPopup_Post", "Dashboard", new AjaxOptions()
{
    OnSuccess = "AccfuncSuccess",
    OnFailure = "AccfuncFail",
    HttpMethod = "POST",
    LoadingElementId = "AccountLoader"
},
    new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="alert alert-success" role="alert" id="AccountSuccessMsg" style="display:none;">
        </div>
    </div>
    <div class="row">
        <div class="alert alert-danger" role="alert" id="AccounErrorMsg" style="display:none;">
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Name <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control m-input", maxlength = "50", @placeholder = "Enter account name" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Account Type<span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.AccountTypeId, Model.AccountTypeDropdown, "-- Select --", htmlAttributes: new { @class = "form-control m-input SearchDropDown" })
                @Html.ValidationMessageFor(model => model.AccountTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Shipping Address <span class="text-danger">  *</span></label>
            @Html.DropDownListFor(model => model.ShippingAddress, Model.AddressDropdown, "Please select", htmlAttributes: new { @class = "form-control m-input" })
            @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Billing Address<span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.BillingAddress, Model.BillingAddressDropdown, "-- Select --", htmlAttributes: new { @class = "form-control m-input" })
                @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Phone Number  <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.PhoneOffice, new { htmlAttributes = new { @class = "form-control m-input", maxlength = "11", @placeholder = "Enter Phone number" } })
            @Html.ValidationMessageFor(model => model.PhoneOffice, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Email <span class="text-danger">  *</span></label>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "example@gmail.com" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Fax  <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "Enter Fax number" } })
            @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">WebSite <span class="text-danger">  *</span></label>
                @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "http://example" } })
                @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Account Size  <span class="text-danger">  *</span></label>
            @Html.DropDownListFor(model => model.AccountSizeId, Model.AccountSizeDropdown, "-- Select --", htmlAttributes: new { @class = "form-control m-input" })
            @Html.ValidationMessageFor(model => model.AccountSizeId, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Industry <span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.IndustryId, Model.IndustryDropdown, "-- Select --", htmlAttributes: new { @class = "form-control m-input" })
                @Html.ValidationMessageFor(model => model.IndustryId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Description <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "Enter description" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Status  <span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.StatusId, Model.StatusDropdown, "-- Select --", htmlAttributes: new { @class = "form-control m-input" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Assigned User <span class="text-danger">  *</span></label>
            @Html.DropDownListFor(model => model.AssignedUser, Model.AssignedUserDropdown, "-- Select --", htmlAttributes: new { @class = "form-control m-input" })
            @Html.ValidationMessageFor(model => model.AssignedUser, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Assigned Team <span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.AssignedTeam, Model.AssignedTeamDropdown, "-- Select --", htmlAttributes: new { @class = "form-control m-input" })
                @Html.ValidationMessageFor(model => model.AssignedTeam, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Currency <span class="text-danger">  *</span></label>
            @Html.DropDownListFor(model => model.CurrencyId, Model.CurrencyDropdown, "-- Select --", htmlAttributes: new { @class = "form-control m-input" })
            @Html.ValidationMessageFor(model => model.CurrencyId, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="row justify-content-end">
        <div class="col-1">
            <button type="button" class="btn btn-primary btn-sm btn-sm mt-2" onclick=" $('#AccountModal form')[0].reset();" data-bs-dismiss="modal">Cancel</button>
        </div>
        <div class="col-1">
            <button type="submit" class="btn btn-primary btn-sm btn-sm mt-2">Save</button>
        </div>
    </div>*@

    <div class="modal-footer">
        <button type="button" class="btn btn-primary btn-sm btn-sm mt-2" onclick=" $('#AccountModal form')[0].reset();" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary btn-sm btn-sm mt-2">Save</button>
    </div>

}

<!--  Modal for loader -->
<div id="AccountLoader" class="modal">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content" style="background: none;">
            <div class="modal-body col-12 d-flex justify-content-center text-center">
                <div class="position-absolute align-items-center  justify-content-center">
                    <div class="spinner-border thumb-md text-primary " role="status"></div>
                </div>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<script>
    function AccfuncSuccess(data) {

        if (data) {
            $('#AccountSuccessMsg').show();
            $("#AccountSuccessMsg").text("Account saved successfully.");
            $('#AccountModal form')[0].reset();
            setTimeout(function () {
                $('#AccountSuccessMsg').hide();
                $('#AccountModal').modal('hide');

            }, 3000);
        } else {
            $('#AccountSuccessMsg').hide();
            swal.fire({
                title: "Exist",
                text: "Email or Phone number already exist",
                icon: "warning",
                button: "Ok",
            })
        }

    }
    function AccfuncFail(err) {
        $('#AccounErrorMsg').show();
        $("#AccounErrorMsg").text("Please refresh the page.");
    };
</script>