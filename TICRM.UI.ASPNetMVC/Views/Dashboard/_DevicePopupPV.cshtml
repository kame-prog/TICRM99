
@model TICRM.DTOs.DeviceDto
@using (Ajax.BeginForm("DeviceModalPopup_Post", "Dashboard", new AjaxOptions()
{
    OnSuccess = "DevicefuncSuccess",
    OnFailure = "DevicefuncFail",
    HttpMethod = "POST",
    LoadingElementId = "DeviceLoader"
},
new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="alert alert-success" role="alert" id="DeviceSuccessMsg" style="display:none;">
        </div>
    </div>
    <div class="row">
        <div class="alert alert-danger" role="alert" id="DeviceErrorMsg" style="display:none;">
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Name <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Device Name" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Account<span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.AccountId, Model.AccountsDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Mac <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Mac, new { htmlAttributes = new { @class = "form-control", @placeholder = "XX-XX-XX-XX-XX-XX" } })
            @Html.ValidationMessageFor(model => model.Mac, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Customer assest<span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.CustomerAssetId, Model.CustomerAssetDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerAssetId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">EMEI Number <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.EMEINumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter EMEI Number" } })
            @Html.ValidationMessageFor(model => model.EMEINumber, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Assigned User<span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.AssignedUser, Model.AssignedUserDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedUser, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Registration Date <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control", Type = "datetime-local" } })
            @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "text-danger" })
            <span id="DateErrMsg" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Assined Team<span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.AssignedTeam, Model.AssignedTeamDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedTeam, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Latitude <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Latitude" } })
            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Maintenance<span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.Maintenance, Model.MaintenanceDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Maintenance, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Longitude<span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Longitude" } })
            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Cloud services<span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.CloudServices, Model.CloudServicesDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CloudServices, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Status <span class="text-danger">  *</span></label>
            @Html.DropDownListFor(model => model.StatusId, Model.StatusDropdown, "-- Select --", htmlAttributes: new { @class = "form-control", @id = "status" })
            @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-primary btn-sm btn-sm mt-2" onclick=" $('#DeviceModal form')[0].reset();" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary btn-sm  btn-sm mt-2">Save</button>
    </div>


}

<!--  Modal for loader -->
<div id="DeviceLoader" class="modal">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content" style="background: none;">
            <div class="modal-body col-12 d-flex justify-content-center text-center">
                <div class="position-absolute align-items-center  justify-content-center">
                    <div class="spinner-border thumb-md text-primary " role="status"></div>
                </div>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<script>
    function DevicefuncSuccess(data) {

        if (data == "success") {
            $('#DeviceSuccessMsg').show();
            $("#DeviceSuccessMsg").text("Device saved successfully.");
            $('#DeviceModal form')[0].reset();
            setTimeout(function () {
                $('#DeviceSuccessMsg').hide();
                $('#DateErrMsg').hide();
                $('#DeviceModal').modal('hide');

            }, 3000);
        }
        else if (data == "Exist") {
            $('#DeviceSuccessMsg').hide();
            swal.fire({
                title: "Exist",
                text: "Mac or EMEI already exist",
                icon: "warning",
                button: "Ok",
            })
        }
        else if (data == "DateError") {

            $('#DeviceSuccessMsg').hide();
            $('#DateErrMsg').show();
            $("#DateErrMsg").text(" Registration date must be less then the current date");
        }

    }
    function DevicefuncFail(err) {
        $('#AccounErrorMsg').show();
        $("#AccounErrorMsg").text("Please refresh the page.");
    };
</script>