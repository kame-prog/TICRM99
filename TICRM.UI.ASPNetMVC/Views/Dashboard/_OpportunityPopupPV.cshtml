@model TICRM.DTOs.OpportunityDto
@using (Ajax.BeginForm("OppModalPopup_Post", "Dashboard", new AjaxOptions()
{
    OnSuccess = "OppfuncSuccess",
    OnFailure = "OppfuncFail",
    HttpMethod = "POST",
    LoadingElementId = "OppLoader"
},
    new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="alert alert-success" role="alert" id="OppSuccessMsg" style="display:none;">
        </div>
    </div>
    <div class="row">
        <div class="alert alert-danger" role="alert" id="OppErrorMsg" style="display:none;">
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Amount  <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "Enter opportunity amount" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Title <span class="text-danger">  *</span></label>
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "Enter opportunity title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Opportunity Stage  <span class="text-danger">  *</span></label>
            @Html.DropDownListFor(model => model.OpportunityStageId, Model.OpportunityStageDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OpportunityStageId, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Probability  <span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.ProbabilityId, Model.ProbabilityDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProbabilityId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Assigned User<span class="text-danger">  *</span></label>
            @Html.DropDownListFor(model => model.AssignedUser, Model.AssignedUserDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AssignedUser, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Status  <span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.StatusId, Model.StatusDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Description<span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "Enter Description" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Assigned Team  <span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.AssignedTeam, Model.AssignedTeamDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedTeam, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Latitude <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "Enter Latitude" } })
            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label mt-2 mt-md-0">Account  <span class="text-danger">  *</span></label>
                @Html.DropDownListFor(model => model.AccountId, Model.AccountsDropdown, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-6">
            <label class="form-label mt-2 mt-md-0">Longitude <span class="text-danger">  *</span></label>
            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "Enter Longitude" } })
            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-primary btn-sm btn-sm mt-2" onclick=" $('#OpportunityModal form')[0].reset();" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary btn-sm btn-sm mt-2">Save</button>
    </div>

}

<!--  Modal for loader -->
<div id="OppLoader" class="modal">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content" style="background: none;">
            <div class="modal-body col-12 d-flex justify-content-center text-center">
                <div class="position-absolute align-items-center  justify-content-center">
                    <div class="spinner-border thumb-md text-primary " role="status"></div>
                </div>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>


<script>
    function OppfuncSuccess(data) {
        $('#OppSuccessMsg').show();
        $("#OppSuccessMsg").text("Opportunity saved successfully.");
        $('#OpportunityModal form')[0].reset();
        setTimeout(function () {
            $('#OppSuccessMsg').hide();
            $('#OpportunityModal').modal('hide');

        }, 3000);
    }
    function OppfuncFail(err) {
        $('#OppErrorMsg').show();
        $("#OppErrorMsg").text("Please refresh the page.");
    };
</script>